const { createCanvas } = require('canvas');
const fs = require('fs').promises;
const path = require('path');
const config = require('../config/config');

/**
 * Generate summary image with country statistics
 */
async function generateSummaryImage(totalCountries, topCountries, lastRefreshed) {
  try {
    // Create canvas
    const width = 800;
    const height = 600;
    const canvas = createCanvas(width, height);
    const ctx = canvas.getContext('2d');

    // Background
    ctx.fillStyle = '#f8f9fa';
    ctx.fillRect(0, 0, width, height);

    // Header background
    ctx.fillStyle = '#007bff';
    ctx.fillRect(0, 0, width, 100);

    // Title
    ctx.fillStyle = '#ffffff';
    ctx.font = 'bold 32px Arial';
    ctx.textAlign = 'center';
    ctx.fillText('Countries Exchange API', width / 2, 50);
    ctx.font = '18px Arial';
    ctx.fillText('Summary Report', width / 2, 80);

    // Total countries
    ctx.fillStyle = '#212529';
    ctx.font = 'bold 24px Arial';
    ctx.textAlign = 'left';
    ctx.fillText(`Total Countries: ${totalCountries}`, 50, 150);

    // Last refreshed
    ctx.font = '16px Arial';
    ctx.fillStyle = '#6c757d';
    const refreshedText = lastRefreshed 
      ? `Last Refreshed: ${new Date(lastRefreshed).toLocaleString()}`
      : 'Last Refreshed: Never';
    ctx.fillText(refreshedText, 50, 180);

    // Top 5 countries header
    ctx.fillStyle = '#212529';
    ctx.font = 'bold 22px Arial';
    ctx.fillText('Top 5 Countries by Estimated GDP', 50, 230);

    // Draw line
    ctx.strokeStyle = '#dee2e6';
    ctx.lineWidth = 2;
    ctx.beginPath();
    ctx.moveTo(50, 240);
    ctx.lineTo(width - 50, 240);
    ctx.stroke();

    // Top countries list
    let yPosition = 280;
    ctx.font = '18px Arial';
    
    topCountries.forEach((country, index) => {
      // Rank
      ctx.fillStyle = '#007bff';
      ctx.font = 'bold 20px Arial';
      ctx.fillText(`${index + 1}.`, 60, yPosition);

      // Country name
      ctx.fillStyle = '#212529';
      ctx.font = 'bold 18px Arial';
      ctx.fillText(country.name, 100, yPosition);

      // GDP
      ctx.fillStyle = '#6c757d';
      ctx.font = '16px Arial';
      const gdpFormatted = country.estimated_gdp 
        ? `$${Number(country.estimated_gdp).toLocaleString('en-US', { maximumFractionDigits: 2 })}`
        : 'N/A';
      ctx.fillText(`GDP: ${gdpFormatted}`, 100, yPosition + 25);

      // Region and currency
      ctx.font = '14px Arial';
      ctx.fillStyle = '#868e96';
      ctx.fillText(
        `${country.region || 'N/A'} | ${country.currency_code || 'N/A'}`,
        100,
        yPosition + 45
      );

      yPosition += 80;
    });

    // Footer
    ctx.fillStyle = '#adb5bd';
    ctx.font = '12px Arial';
    ctx.textAlign = 'center';
    ctx.fillText('Generated by Countries Exchange API', width / 2, height - 20);

    // Ensure cache directory exists
    const cacheDir = path.resolve(config.cache.dir);
    await fs.mkdir(cacheDir, { recursive: true });

    // Save image
    const imagePath = path.join(cacheDir, 'summary.png');
    const buffer = canvas.toBuffer('image/png');
    await fs.writeFile(imagePath, buffer);

    console.log(`âœ… Summary image generated at ${imagePath}`);
    return imagePath;
  } catch (error) {
    console.error('Error generating summary image:', error);
    throw error;
  }
}

/**
 * Get summary image path
 */
function getSummaryImagePath() {
  return path.join(path.resolve(config.cache.dir), 'summary.png');
}

/**
 * Check if summary image exists
 */
async function summaryImageExists() {
  try {
    const imagePath = getSummaryImagePath();
    await fs.access(imagePath);
    return true;
  } catch {
    return false;
  }
}

module.exports = {
  generateSummaryImage,
  getSummaryImagePath,
  summaryImageExists
};
